//
//  GameViewController.m
//  Poker
//
//  Created by DengZw on 16/8/1.
//  Copyright © 2016年 ALonelyEgg.com. All rights reserved.
//

#import "GameViewController.h"

#import "PokerSever.h"
#import "PokerManager.h"
#import "RoleModel.h"

#import "ZwCardView.h"
#import "ZwHandsCardView.h"

#import "BigCardType.h"

#import "ZwMenuView.h"
#import "GameUserView.h"


@interface GameViewController ()<ZwMenuViewDelegate>
{
    ZwHandsCardView *cardsView;
}

@end

@implementation GameViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    [self createUIView];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)createUIView
{
    [self createMenuButtonsView];
    [self createUserInfoView];
}

- (void)createMenuButtonsView
{
    ZwMenuView *menuView = [[ZwMenuView alloc] initWithPoint:CGPointMake(self.view.bounds.size.width - 10, 10) delegate:self];
    [self.view addSubview:menuView];
}

- (void)createUserInfoView
{
    CGFloat u1X = self.view.bounds.size.width / 2 - 22;
    GameUserView *u1View = [[GameUserView alloc] initWithPoint:CGPointMake(u1X, 2) parentVc:self];
    [self.view addSubview:u1View];
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

- (void)zwMenuViewSelectedIndex:(NSInteger)index
{
    NSLog(@"%ld", index);
    switch (index)
    {
        case 0:
            [self dismissViewControllerAnimated:YES completion:nil];
            break;
            
        default:
            break;
    }
}

- (void)btnDiscardAction:(UIButton *)btn
{
    [cardsView discard];
}

- (void)testCode
{
    RoleModel *role = [[RoleModel alloc] init];
    [[PokerSever shareSever] linkToSeverByPlayer:role];
    [[PokerSever shareSever] linkToSeverByPlayer:role];
    [[PokerSever shareSever] linkToSeverByPlayer:role];
    [[PokerSever shareSever] linkToSeverByPlayer:role];
    
    PlayerModel *model = [[PokerSever shareSever] aModel];
    
    // 头像
    /*
     UIImageView *userHeadImgView = [[UIImageView alloc] initWithFrame:CGRectMake(5, cardsView.frame.origin.y + 20, 50, 50)];
     userHeadImgView.image = [UIImage imageNamed:@"userhead"];
     [self.view addSubview:userHeadImgView];
     
     UILabel *lblName = [[UILabel alloc] initWithFrame:CGRectMake(0, userHeadImgView.frame.size.height + userHeadImgView.frame.origin.y, 60, 12)];
     lblName.text = @"这是我的昵称";
     lblName.font = [UIFont systemFontOfSize:10];
     lblName.textAlignment = NSTextAlignmentCenter;
     [self.view addSubview:lblName];
     
     UILabel *lblCount = [[UILabel alloc] initWithFrame:CGRectMake(0, userHeadImgView.frame.size.height + userHeadImgView.frame.origin.y + 15, 60, 12)];
     lblCount.text = @"这是我的金币";
     lblCount.font = [UIFont systemFontOfSize:10];
     lblCount.textAlignment = NSTextAlignmentCenter;
     [self.view addSubview:lblCount];
     
     UIImageView *myCardImgView = [[UIImageView alloc] initWithFrame:CGRectMake(cardsView.frame.origin.x + cardsView.frame.size.width + 5, cardsView.frame.origin.y + 20, 130/2, 173/2)];
     myCardImgView.image = [UIImage imageNamed:@"00"];
     [self.view addSubview:myCardImgView];
     */
    
    // 单牌测试
    CardModel *otherModel = [[CardModel alloc] initWithTag:@"A" andNum:6];
    NSMutableArray *array = [[BigCardType sharedBigger] gotBigTypeCardsByHandsCards:model.cardsInHandArray otherCards:@[otherModel]];
    
    // 对子测试
    array = [[BigCardType sharedBigger] gotBigTypeCardsByHandsCards:model.cardsInHandArray otherCards:@[otherModel, otherModel]];
    
    // 连子测试
    CardModel *m3 = [[CardModel alloc] initWithTag:@"A" andNum:3];
    CardModel *m4 = [[CardModel alloc] initWithTag:@"A" andNum:4];
    CardModel *m5 = [[CardModel alloc] initWithTag:@"A" andNum:5];
    CardModel *m6 = [[CardModel alloc] initWithTag:@"A" andNum:6];
    CardModel *m7 = [[CardModel alloc] initWithTag:@"A" andNum:7];
    CardModel *m8 = [[CardModel alloc] initWithTag:@"A" andNum:8];
    CardModel *m9 = [[CardModel alloc] initWithTag:@"A" andNum:9];
    CardModel *m10 = [[CardModel alloc] initWithTag:@"A" andNum:10];
    CardModel *m11 = [[CardModel alloc] initWithTag:@"A" andNum:11];
    CardModel *m12 = [[CardModel alloc] initWithTag:@"A" andNum:12];
    CardModel *m13 = [[CardModel alloc] initWithTag:@"A" andNum:13];
    CardModel *m14 = [[CardModel alloc] initWithTag:@"A" andNum:14];
    CardModel *m15 = [[CardModel alloc] initWithTag:@"A" andNum:15];
    
    NSMutableArray *handsArray = [[NSMutableArray alloc] init];
    //    [handsArray addObject:m3];
    //    [handsArray addObject:m3];
    //    [handsArray addObject:m3];
    //    [handsArray addObject:m3];
    //
    //    [handsArray addObject:m4];
    //    [handsArray addObject:m5];
    //    [handsArray addObject:m5];
    //    [handsArray addObject:m7];
    //    [handsArray addObject:m8];
    //    [handsArray addObject:m9];
    //    [handsArray addObject:m10];
    //    [handsArray addObject:m11];
    //    [handsArray addObject:m15];
    
    //    model.cardsInHandArray = handsArray;
    
    CardModel *mSZ1 = [[CardModel alloc] initWithTag:@"A" andNum:6];
    CardModel *mSZ2 = [[CardModel alloc] initWithTag:@"A" andNum:7];
    CardModel *mSZ3 = [[CardModel alloc] initWithTag:@"A" andNum:8];
    CardModel *mSZ4 = [[CardModel alloc] initWithTag:@"A" andNum:9];
    array = [[BigCardType sharedBigger] gotBigTypeCardsByHandsCards:model.cardsInHandArray otherCards:@[mSZ1, mSZ2, mSZ3, mSZ4]];
    
    // 炸弹测试
    
    array = [[BigCardType sharedBigger] gotBigTypeCardsByHandsCards:model.cardsInHandArray otherCards:@[mSZ1, mSZ1, mSZ1]];
    
    // 板子炮测试
    
    [handsArray addObject:m4];
    [handsArray addObject:m5];
    [handsArray addObject:m6];
    [handsArray addObject:m7];
    
    [handsArray addObject:m7];
    [handsArray addObject:m9];
    [handsArray addObject:m10];
    [handsArray addObject:m11];
    [handsArray addObject:m11];
    [handsArray addObject:m12];
    [handsArray addObject:m12];
    [handsArray addObject:m13];
    [handsArray addObject:m13];
    
    //    model.cardsInHandArray = handsArray;
    
    array = [[BigCardType sharedBigger] gotBigTypeCardsByHandsCards:model.cardsInHandArray otherCards:@[mSZ1, mSZ1, mSZ2, mSZ2, mSZ3, mSZ3]];
    
    for (CardModel *model in array)
    {
        NSLog(@"%@%ld ", model.tag, model.num);
    }
    
    // 牌
    cardsView = [[ZwHandsCardView alloc] initWithFrame:CGRectMake(60, self.view.bounds.size.height - 173/2 - 20, self.view.bounds.size.width - 120 - 130/2, 173/2 + 20) cards:model.cardsInHandArray];
    cardsView.backgroundColor = [UIColor lightGrayColor];
    [self.view addSubview:cardsView];
    
    UIButton *btnDiscard = [UIButton buttonWithType:UIButtonTypeCustom];
    btnDiscard.frame = CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height);
    [btnDiscard addTarget:self action:@selector(btnDiscardAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:btnDiscard];
    [self.view sendSubviewToBack:btnDiscard];
}

@end
